// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from trade.proto

package com.xx.xxx.jcproto;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.ByteString;
import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class TRADE_RSP_LOGIN implements Externalizable, Message<TRADE_RSP_LOGIN>
{

    public static Schema<TRADE_RSP_LOGIN> getSchema()
    {
        return SCHEMA;
    }

    public static TRADE_RSP_LOGIN getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final TRADE_RSP_LOGIN DEFAULT_INSTANCE = new TRADE_RSP_LOGIN();

    
    // non-private fields
    // see http://developer.android.com/guide/practices/design/performance.html#package_inner
    String tradingDay;
    String loginTime;
    String brokerID;
    String userID;
    ByteString systemName;
    Integer frontID;
    Integer sessionID;
    String maxOrderRef;
    String sHFETime;
    String dCETime;
    String cZCETime;
    String fFEXTime;
    String iNETime;
    String rspcode;
    ByteString rspmsg;

    public TRADE_RSP_LOGIN()
    {
        
    }

    public TRADE_RSP_LOGIN(
        String rspcode,
        ByteString rspmsg
    )
    {
        this.rspcode = rspcode;
        this.rspmsg = rspmsg;
    }

    // getters and setters

    // tradingDay

    public String getTradingDay()
    {
        return tradingDay;
    }

    public void setTradingDay(String tradingDay)
    {
        this.tradingDay = tradingDay;
    }

    // loginTime

    public String getLoginTime()
    {
        return loginTime;
    }

    public void setLoginTime(String loginTime)
    {
        this.loginTime = loginTime;
    }

    // brokerID

    public String getBrokerID()
    {
        return brokerID;
    }

    public void setBrokerID(String brokerID)
    {
        this.brokerID = brokerID;
    }

    // userID

    public String getUserID()
    {
        return userID;
    }

    public void setUserID(String userID)
    {
        this.userID = userID;
    }

    // systemName

    public ByteString getSystemName()
    {
        return systemName;
    }

    public void setSystemName(ByteString systemName)
    {
        this.systemName = systemName;
    }

    // frontID

    public Integer getFrontID()
    {
        return frontID;
    }

    public void setFrontID(Integer frontID)
    {
        this.frontID = frontID;
    }

    // sessionID

    public Integer getSessionID()
    {
        return sessionID;
    }

    public void setSessionID(Integer sessionID)
    {
        this.sessionID = sessionID;
    }

    // maxOrderRef

    public String getMaxOrderRef()
    {
        return maxOrderRef;
    }

    public void setMaxOrderRef(String maxOrderRef)
    {
        this.maxOrderRef = maxOrderRef;
    }

    // sHFETime

    public String getSHFETime()
    {
        return sHFETime;
    }

    public void setSHFETime(String sHFETime)
    {
        this.sHFETime = sHFETime;
    }

    // dCETime

    public String getDCETime()
    {
        return dCETime;
    }

    public void setDCETime(String dCETime)
    {
        this.dCETime = dCETime;
    }

    // cZCETime

    public String getCZCETime()
    {
        return cZCETime;
    }

    public void setCZCETime(String cZCETime)
    {
        this.cZCETime = cZCETime;
    }

    // fFEXTime

    public String getFFEXTime()
    {
        return fFEXTime;
    }

    public void setFFEXTime(String fFEXTime)
    {
        this.fFEXTime = fFEXTime;
    }

    // iNETime

    public String getINETime()
    {
        return iNETime;
    }

    public void setINETime(String iNETime)
    {
        this.iNETime = iNETime;
    }

    // rspcode

    public String getRspcode()
    {
        return rspcode;
    }

    public void setRspcode(String rspcode)
    {
        this.rspcode = rspcode;
    }

    // rspmsg

    public ByteString getRspmsg()
    {
        return rspmsg;
    }

    public void setRspmsg(ByteString rspmsg)
    {
        this.rspmsg = rspmsg;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, SCHEMA);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, SCHEMA);
    }

    // message method

    public Schema<TRADE_RSP_LOGIN> cachedSchema()
    {
        return SCHEMA;
    }

    static final Schema<TRADE_RSP_LOGIN> SCHEMA = new Schema<TRADE_RSP_LOGIN>()
    {
        // schema methods

        public TRADE_RSP_LOGIN newMessage()
        {
            return new TRADE_RSP_LOGIN();
        }

        public Class<TRADE_RSP_LOGIN> typeClass()
        {
            return TRADE_RSP_LOGIN.class;
        }

        public String messageName()
        {
            return TRADE_RSP_LOGIN.class.getSimpleName();
        }

        public String messageFullName()
        {
            return TRADE_RSP_LOGIN.class.getName();
        }

        public boolean isInitialized(TRADE_RSP_LOGIN message)
        {
            return 
                message.rspcode != null 
                && message.rspmsg != null;
        }

        public void mergeFrom(Input input, TRADE_RSP_LOGIN message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.tradingDay = input.readString();
                        break;
                    case 2:
                        message.loginTime = input.readString();
                        break;
                    case 3:
                        message.brokerID = input.readString();
                        break;
                    case 4:
                        message.userID = input.readString();
                        break;
                    case 5:
                        message.systemName = input.readBytes();
                        break;
                    case 6:
                        message.frontID = input.readInt32();
                        break;
                    case 7:
                        message.sessionID = input.readInt32();
                        break;
                    case 8:
                        message.maxOrderRef = input.readString();
                        break;
                    case 9:
                        message.sHFETime = input.readString();
                        break;
                    case 10:
                        message.dCETime = input.readString();
                        break;
                    case 11:
                        message.cZCETime = input.readString();
                        break;
                    case 12:
                        message.fFEXTime = input.readString();
                        break;
                    case 13:
                        message.iNETime = input.readString();
                        break;
                    case 14:
                        message.rspcode = input.readString();
                        break;
                    case 15:
                        message.rspmsg = input.readBytes();
                        break;
                    default:
                        input.handleUnknownField(number, this);
                }   
            }
        }


        public void writeTo(Output output, TRADE_RSP_LOGIN message) throws IOException
        {
            if(message.tradingDay != null)
                output.writeString(1, message.tradingDay, false);

            if(message.loginTime != null)
                output.writeString(2, message.loginTime, false);

            if(message.brokerID != null)
                output.writeString(3, message.brokerID, false);

            if(message.userID != null)
                output.writeString(4, message.userID, false);

            if(message.systemName != null)
                output.writeBytes(5, message.systemName, false);

            if(message.frontID != null)
                output.writeInt32(6, message.frontID, false);

            if(message.sessionID != null)
                output.writeInt32(7, message.sessionID, false);

            if(message.maxOrderRef != null)
                output.writeString(8, message.maxOrderRef, false);

            if(message.sHFETime != null)
                output.writeString(9, message.sHFETime, false);

            if(message.dCETime != null)
                output.writeString(10, message.dCETime, false);

            if(message.cZCETime != null)
                output.writeString(11, message.cZCETime, false);

            if(message.fFEXTime != null)
                output.writeString(12, message.fFEXTime, false);

            if(message.iNETime != null)
                output.writeString(13, message.iNETime, false);

            if(message.rspcode == null)
                throw new UninitializedMessageException(message);
            output.writeString(14, message.rspcode, false);

            if(message.rspmsg == null)
                throw new UninitializedMessageException(message);
            output.writeBytes(15, message.rspmsg, false);
        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "tradingDay";
                case 2: return "loginTime";
                case 3: return "brokerID";
                case 4: return "userID";
                case 5: return "systemName";
                case 6: return "frontID";
                case 7: return "sessionID";
                case 8: return "maxOrderRef";
                case 9: return "sHFETime";
                case 10: return "dCETime";
                case 11: return "cZCETime";
                case 12: return "fFEXTime";
                case 13: return "iNETime";
                case 14: return "rspcode";
                case 15: return "rspmsg";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        final java.util.HashMap<String,Integer> fieldMap = new java.util.HashMap<String,Integer>();
        {
            fieldMap.put("tradingDay", 1);
            fieldMap.put("loginTime", 2);
            fieldMap.put("brokerID", 3);
            fieldMap.put("userID", 4);
            fieldMap.put("systemName", 5);
            fieldMap.put("frontID", 6);
            fieldMap.put("sessionID", 7);
            fieldMap.put("maxOrderRef", 8);
            fieldMap.put("sHFETime", 9);
            fieldMap.put("dCETime", 10);
            fieldMap.put("cZCETime", 11);
            fieldMap.put("fFEXTime", 12);
            fieldMap.put("iNETime", 13);
            fieldMap.put("rspcode", 14);
            fieldMap.put("rspmsg", 15);
        }
    };
    
}
