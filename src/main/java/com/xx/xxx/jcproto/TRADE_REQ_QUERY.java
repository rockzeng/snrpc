// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from trade.proto

package com.xx.xxx.jcproto;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class TRADE_REQ_QUERY implements Externalizable, Message<TRADE_REQ_QUERY>
{

    public static Schema<TRADE_REQ_QUERY> getSchema()
    {
        return SCHEMA;
    }

    public static TRADE_REQ_QUERY getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final TRADE_REQ_QUERY DEFAULT_INSTANCE = new TRADE_REQ_QUERY();

    
    // non-private fields
    // see http://developer.android.com/guide/practices/design/performance.html#package_inner
    String instrumentID;
    String beginDate;
    String endDate;
    Integer paginalNum;
    Integer currentPage;

    public TRADE_REQ_QUERY()
    {
        
    }

    public TRADE_REQ_QUERY(
        String instrumentID,
        String beginDate,
        String endDate,
        Integer paginalNum,
        Integer currentPage
    )
    {
        this.instrumentID = instrumentID;
        this.beginDate = beginDate;
        this.endDate = endDate;
        this.paginalNum = paginalNum;
        this.currentPage = currentPage;
    }

    // getters and setters

    // instrumentID

    public String getInstrumentID()
    {
        return instrumentID;
    }

    public void setInstrumentID(String instrumentID)
    {
        this.instrumentID = instrumentID;
    }

    // beginDate

    public String getBeginDate()
    {
        return beginDate;
    }

    public void setBeginDate(String beginDate)
    {
        this.beginDate = beginDate;
    }

    // endDate

    public String getEndDate()
    {
        return endDate;
    }

    public void setEndDate(String endDate)
    {
        this.endDate = endDate;
    }

    // paginalNum

    public Integer getPaginalNum()
    {
        return paginalNum;
    }

    public void setPaginalNum(Integer paginalNum)
    {
        this.paginalNum = paginalNum;
    }

    // currentPage

    public Integer getCurrentPage()
    {
        return currentPage;
    }

    public void setCurrentPage(Integer currentPage)
    {
        this.currentPage = currentPage;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, SCHEMA);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, SCHEMA);
    }

    // message method

    public Schema<TRADE_REQ_QUERY> cachedSchema()
    {
        return SCHEMA;
    }

    static final Schema<TRADE_REQ_QUERY> SCHEMA = new Schema<TRADE_REQ_QUERY>()
    {
        // schema methods

        public TRADE_REQ_QUERY newMessage()
        {
            return new TRADE_REQ_QUERY();
        }

        public Class<TRADE_REQ_QUERY> typeClass()
        {
            return TRADE_REQ_QUERY.class;
        }

        public String messageName()
        {
            return TRADE_REQ_QUERY.class.getSimpleName();
        }

        public String messageFullName()
        {
            return TRADE_REQ_QUERY.class.getName();
        }

        public boolean isInitialized(TRADE_REQ_QUERY message)
        {
            return 
                message.instrumentID != null 
                && message.beginDate != null 
                && message.endDate != null 
                && message.paginalNum != null 
                && message.currentPage != null;
        }

        public void mergeFrom(Input input, TRADE_REQ_QUERY message) throws IOException
        {
            for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
            {
                switch(number)
                {
                    case 0:
                        return;
                    case 1:
                        message.instrumentID = input.readString();
                        break;
                    case 2:
                        message.beginDate = input.readString();
                        break;
                    case 3:
                        message.endDate = input.readString();
                        break;
                    case 4:
                        message.paginalNum = input.readInt32();
                        break;
                    case 5:
                        message.currentPage = input.readInt32();
                        break;
                    default:
                        input.handleUnknownField(number, this);
                }   
            }
        }


        public void writeTo(Output output, TRADE_REQ_QUERY message) throws IOException
        {
            if(message.instrumentID == null)
                throw new UninitializedMessageException(message);
            output.writeString(1, message.instrumentID, false);

            if(message.beginDate == null)
                throw new UninitializedMessageException(message);
            output.writeString(2, message.beginDate, false);

            if(message.endDate == null)
                throw new UninitializedMessageException(message);
            output.writeString(3, message.endDate, false);

            if(message.paginalNum == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(4, message.paginalNum, false);

            if(message.currentPage == null)
                throw new UninitializedMessageException(message);
            output.writeInt32(5, message.currentPage, false);
        }

        public String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instrumentID";
                case 2: return "beginDate";
                case 3: return "endDate";
                case 4: return "paginalNum";
                case 5: return "currentPage";
                default: return null;
            }
        }

        public int getFieldNumber(String name)
        {
            final Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }

        final java.util.HashMap<String,Integer> fieldMap = new java.util.HashMap<String,Integer>();
        {
            fieldMap.put("instrumentID", 1);
            fieldMap.put("beginDate", 2);
            fieldMap.put("endDate", 3);
            fieldMap.put("paginalNum", 4);
            fieldMap.put("currentPage", 5);
        }
    };
    
}
